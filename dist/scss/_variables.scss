//$<argument/virable>, &:The parent selector, #{$val}:selector(property) with level/CANNOT used for value ($val can be used), @import
//@extend <name> | %<name> {}, @mixin <name> {$<var-name>} | @include <name> {$<var>}, #{$<var>}
//@mixin / @include <name> { ... }, @mixin / @include <name>(<arguments...>) { ... }
//$var:<value> !default; (!default:This assigns a value to a variable only if that variable isn’t defined or its value is null. Otherwise, the existing value will be used. This way, users can set variables before they import your library - https://sass-lang.com/documentation/variables#default-values)
//map-get($fontsize-btn, m) map to:$fontsize-btn:("default":".fontSize", "m":".fontSizeM", "l":".fontSizeL");

//mc: materializecss

@import 'color-variables';

//### Media ###------------------------------------------------//
$small:640px !default; //s
$medium:960px !default; //m
$large:1200px !default; //l
$xlarge:1600px !default; //xl
$small-range:"only screen and (min-width :#{$small})" !default;
$medium-range:"only screen and (min-width :#{$medium})" !default;
$large-range:"only screen and (min-width :#{$large})" !default;
$xlarge-range:"only screen and (min-width :#{$xlarge})" !default;
$small-down:"only screen and (max-width :#{$small}-1px)" !default;
$medium-down:"only screen and (max-width :#{$medium}-1px)" !default;
$medium-only:"only screen and (min-width :#{$medium}) and (max-width :#{$large}-1px)" !default;

//### Font ###------------------------------------------------//
@mixin google-font($family) {
  @import url("http://fonts.googleapis.com/css?family=#{$family}&display=swap&subset=chinese-traditional");
}
@include google-font("Noto+Sans+TC:100,300,400,500,700,900|Noto+Serif+TC|Poppins|Material+Icons");
@mixin mi {
  font-family:'Material Icons';
  font-weight:normal;
  font-style:normal;
  font-size:24px;  /* Preferred icon size */
  display:inline-block;
  line-height:1;
  text-transform:none;
  letter-spacing:normal;
  word-wrap:normal;
  white-space:nowrap;
  direction:ltr;
  /* Support for all WebKit browsers. */
  -webkit-font-smoothing:antialiased;
  /* Support for Safari and Chrome. */
  text-rendering:optimizeLegibility;
  /* Support for Firefox. */
  -moz-osx-font-smoothing:grayscale;
  /* Support for IE. */
  font-feature-settings:'liga';
}
@mixin fa {
  display:inline-block;
  font-style:normal;
  font-variant:normal;
  text-rendering:auto;
  -webkit-font-smoothing:antialiased;
}
$font-cht:微軟正黑體, 'Microsoft JhengHei', 'PingFang TC', 'Heiti TC', 'Microsoft YaHei', Helvetica, Arial, Verdana, sans-serif !default;
$font-cht-hei:'Noto Sans TC', sans-serif !default;
$font-cht-ming:'Noto Serif TC', serif !default;
$font-eng:Poppins, sans-serif !default;
$font-fa:'Font Awesome 5 Free' !default;
$font-mi:'Material Icons' !default;
$font-def:$font-cht-hei !default;

$fontwight:300 !default;
$font-base:18px !default;
$fontsize:calc(#{strip-unit($font-base)}rem/16) !default; //it equals 18px=(18/16)rem, browser default fnot size in body:1rem=16px
$fontsize-xs:calc(#{strip-unit($font-base)-2*2}rem/#{strip-unit($font-base)}) !default; //1rem=$font-base
$fontsize-s:calc(#{strip-unit($font-base)-2}rem/#{strip-unit($font-base)}) !default;
$fontsize-m:calc(#{strip-unit($font-base)+2}rem/#{strip-unit($font-base)}) !default;
$fontsize-l:calc(#{strip-unit($font-base)+2*2}rem/#{strip-unit($font-base)}) !default;
$fontsize-xl:calc(#{strip-unit($font-base)+2*3}rem/#{strip-unit($font-base)}) !default;
$min-fontsize:strip-unit(12px) !default; //browser default display minimum fnot size, even smaller than 12px
$max-fontsize:strip-unit(48px) !default;


//### Text ###------------------------------------------------//
$line-normal:normal !default;
$line-height:1.5 !default;
$min-line-height:1 !default;
$max-line-height:2 !default;

//### Selectors ###------------------------------------------------//
$boolean:false !default;
$base-text:h1, h2, h3, h4, h5, h6, p !default;
$small-text:footer, small !default;
$fa:"[class*=fa-]" !default;
$mi:"[class*=material-]" !default;
$font-def-name:".font_default" !default;
$font-size-name:".fontsize-" !default;
$font-weight-name:".fontweight-" !default;
$line-def-name:".line_default" !default;
$line-height-name:".line-" !default;
$fontsize-btn:".fontSize" !default;
$fontsize-btn-m:".fontSizeM" !default;
$fontsize-btn-l:".fontSizeL" !default;
$font-eng-name:".font_eng" !default;
$font-number-name:".font_number" !default;
$focus-emphasis:a, button, input, select, textarea !default;
$url-fix:"p, .url_fix" !default;
$text-color-white:".color_white" !default;
$text-color-black:".color_black" !default;
$text-color-dark:".color_dark" !default;
$text-color-grey:".color_grey" !default;
$text-color-primary:".color_primary" !default;
$text-color-secondary:".color_secondary" !default;
$bg-black:".bg_black" !default;
$bg-primary:".bg_primary" !default;
$bg-primary-light:".bg_primary-light" !default;
$bg-primary-lighter:".bg_primary-lighter" !default;
$bg-primary-dark:".bg_primary-dark" !default;
$bg-primary-darker:".bg_primary-darker" !default;
$bg-secondary:".bg_secondary" !default;
$bg-secondary-light:".bg_secondary-light" !default;
$bg-secondary-lighter:".bg_secondary-lighter" !default;
$bg-secondary-dark:".bg_secondary-dark" !default;
$bg-secondary-darker:".bg_secondary-darker" !default;
$bg-white-opacity:".bg_white_opacity-" !default;
$bg-black-opacity:".bg_black_opacity-" !default;
$text-color-facebook:".color_facebook" !default;
$bg-facebook:".bg_facebook" !default;
$text-color-twitter:".color_twitter" !default;
$bg-twitter:".bg_twitter" !default;
$text-color-googleplus:".color_googleplus" !default;
$bg-googleplus:".bg_googleplus" !default;
$text-color-linkedin:".color_linkedin" !default;
$bg-linkedin:".bg_linkedin" !default;
$text-color-line:".color_line" !default;
$bg-line:".bg_line" !default;
$border-white-opacity:".border_white_opacity-" !default;
$border-black-opacity:".border_black_opacity-" !default;
$divider-dashed:".divider_dashed" !default;
$divider-child:".divider_child" !default;
$opacity-name:".opacity-" !default;
$btn-primary:".btn_primary" !default;
$btn-primary-light:".btn_primary-light" !default;
$btn-primary-lighter:".btn_primary-lighter" !default;
$btn-primary-dark:".btn_primary-dark" !default;
$btn-primary-darker:".btn_primary-darker" !default;
$btn-secondary:".btn_secondary" !default;
$btn-secondary-light:".btn_secondary-light" !default;
$btn-secondary-lighter:".btn_secondary-lighter" !default;
$btn-secondary-dark:".btn_secondary-dark" !default;
$btn-secondary-darker:".btn_secondary-darker" !default;
$active:".active" !default;
$disabled:".disabled" !default;
$inline-block:a, span, label, strong, small !default;
$empty:".empty";
$none:"img[src='']", "#{$empty}:empty:only-child" !default;
$margin-child:".margin_child" !default;
$margin-x-child:".margin_x_child" !default;
$margin-x-child-m:".margin_x_child-m" !default;
$margin-x-child-l:".margin_x_child-l" !default;
$margin-y-child:".margin_y_child" !default;
$margin-y-child-m:".margin_y_child-m" !default;
$margin-y-child-l:".margin_y_child-l" !default;
$margin-y-child-even:".margin_y_child-even" !default;
$margin-y-child-even-m:".margin_y_child_even-m" !default;
$margin-y-child-even-l:".margin_y_child_even-l" !default;
$list-striped:".list_striped" !default;
$list-horizontal:".list_horizontal" !default;
$list-decimal:".list_decimal" !default;
$list-decimal-ch:".list_decimal_ch" !default;
$list-decimal-row:".list_decimal_row" !default;
$list-badge:".list_badge" !default;
$list-badge-r:".list_badge-r" !default;
$list-badge-divder:".list_badge-divder" !default;
$list-badge-margin-s:".list_badge_margin-s" !default;
$list-dot:".list_dot" !default;
$list-vline:".list_vline" !default;
$list-btmline:".list_btmline" !default;
$list-collapse:".list_collapse" !default;
$list-small:".list_small" !default;
$hanging-indent:".hanging_indent" !default;
$reset-indent:".reset_indent" !default;
$width:".w-" !default;
$min-width:".min_width-" !default;
$min-height:".min_height-" !default;
$max-height:".max_height-" !default;
$overflow-hidden:".overflow_hidden" !default;
$left:".left-" !default;
$top:".top-" !default;
$right:".right-" !default;
$bottom:".bottom-" !default;
$truncate:".truncate-" !default;
$ellipsis:".ellipsis-" !default;
$aspect:".aspect" !default;
$ratio:".ratio-" !default;
$pseudo-item-pipe:".pseudo\\:item_pipe" !default;
$pseudo-item-circle:".pseudo\\:item_circle" !default;
$pseudo-item-dot:".pseudo\\:item_dot" !default;
$pseudo-fa:".pseudo\\:fa-" !default;
$pseudo-fa-angle-right:".pseudo\\:fa-angle-right" !default;
$pseudo-parentheses:".pseudo\\:parentheses" !default;
$pseudo-line-vertical:".pseudo\\:line_v" !default;
$pseudo-slash:".pseudo\\:slash" !default;
$pseudo-bottom-line:".pseudo\\:btm_line" !default;
$pseudo-comma:".pseudo\\:comma" !default;
$pseudo-comma-ch:".pseudo\\:comma_ch" !default;
$pseudo-comma-dot:".pseudo\\:comma_dot" !default;
$pseudo-arrow:".pseudo\\:arrow" !default;
$pseudo-plus:".pseudo\\:plus" !default;
$quotes-ch:".quotes" !default;
$quotes-dashes:".dashes" !default;
$checkbox:".checkbox" !default;
$checkbox-circle:".checkbox_circle" !default;
$grid-xsmall:".grid_xs" !default;
$grid-xxsmall:".grid_xxs" !default;
$grid-divider-stack-remove:".grid_divider_stack_remove" !default;
$container-responsive:".container_responsive" !default;
$container-expand:".container_expand" !default;
$pagination-padding-s:".pagination_padding_s" !default;
$pagination-bg:".pagination_bg" !default;
$pagination-link:".pagination_link" !default;
$pagination:".pagination" !default;
$button:".btn" !default;
$accordion-icon-l:".accordion_icon-l" !default;
$accordion-icon-r:".accordion_icon-r" !default;
$accordion-icon-r-arrow:".accordion_icon-r-arrow" !default;
$table-responsive:".table_responsive" !default;
$form-white:".form_white" !default;

$mc-card:".card" !default;
$mc-card-content:".card-content" !default;

$uk:"[class*=uk-]" !default;
$uk-breadcrumb:".uk-breadcrumb" !default;
$uk-breadcrumb-pseudo:".uk-breadcrumb>:nth-child(n+2):not(.uk-first-column)::before" !default;
$uk-tab:".uk-tab" !default;
$uk-tab-pseudo:".uk-tab::before" !default;
$uk-list-striped:".uk-list-striped" !default;
$uk-alert:".uk-alert" !default;
$uk-grid:".uk-grid" !default;
$uk-grid-divider:".uk-grid-divider" !default;
$uk-grid-stack:".uk-grid-stack" !default;
$uk-grid-margin:".uk-grid-margin" !default;
$uk-width:"[class*='uk-width']" !default;
$uk-card:".uk-card" !default;
$uk-card-small:".uk-card-small" !default;
$uk-card-large:".uk-card-large" !default;
$uk-subnav:".uk-subnav" !default;
$uk-nav:".uk-nav" !default;
$uk-nav-header:".uk-nav-header" !default;
$uk-navbar-nav:".uk-navbar-nav" !default;
$uk-navbar-toggle-icon:".uk-navbar-toggle-icon" !default;
$uk-slideshow:".uk-slideshow" !default;
$uk-light:".uk-light" !default;
$uk-slidenav:".uk-slidenav" !default;
$uk-modal:".uk-modal" !default;
$uk-modal-dialog-lightbox:".uk-modal-dialog-lightbox" !default;
$uk-lightbox-content:".uk-lightbox-content" !default;
$uk-dotnav:".uk-dotnav" !default;
$uk-active:".uk-active" !default;
$uk-disabled:".uk-disabled" !default;
$uk-pagination:".uk-pagination" !default;
$uk-accordion-title:".uk-accordion-title" !default;
$uk-table:".uk-table" !default;
$uk-table-responsive:".uk-table-responsive" !default;
$uk-table-link:".uk-table-link" !default;
$uk-checkbox:".uk-checkbox" !default;
$uk-radio:".uk-radio" !default;
$uk-input:".uk-input" !default;
$uk-select:".uk-select" !default;
$uk-textarea:".uk-textarea" !default;
$uk-button:".uk-button" !default;
$uk-list:".uk-list" !default;
$uk-list-bullet:".uk-list-bullet" !default;
$uk-container:".uk-container" !default;
$uk-flex-top:".uk-flex-top" !default;
$uk-open:".uk-open" !default;
$uk-form-custom:".uk-form-custom" !default;
$uk-form-small:".uk-form-small" !default;
$uk-width-1-1:".uk-width-1-1" !default;
$uk-width-auto:".uk-width-auto" !default;
$uk-dropdown-nav:".uk-dropdown-nav" !default;

$height-ie:".height_ie" !default;

// $bg-primary:$bg-primary-name, $btn-primary-name !default;
// $bg-secondary:$bg-secondary-name, $btn-secondary-name !default;

//### Exclude Selectors ###------------------------------------------------//
$not-fa:":not([class*=fa-])" !default;
$fa-exclude:":not(.fa-layers-text):not(.font_default)" !default;
$not-bg:":not([class*=bg_]):not([class*=btn_])" !default;
$not-uk-width:":not([class*=uk-width])" !default;

//### Line Height ###------------------------------------------------//
@mixin line($line-height, $selectors...) {
  #{$selectors} {
      line-height:$line-height;
  }
}
// @include exclude($line-height-1, ":not([class*=bg_])", ":not([class*=btn_])");

//### Words Wrap ###------------------------------------------------//
@mixin break-word() {
  overflow-wrap:break-word;
  word-wrap:break-word;
}

//### Colors & Opacity ###------------------------------------------------//
$color-grey:#9e9e9e !default;
$color-grey-light:lighten($color-grey, 20%) !default;
$color-grey-dark:darken($color-grey, 20%) !default;
$color-light:#fafafa !default;
$color-dark:#333 !default;
$color-body-bg:#F7FAFC !default;
$color-text:#4A5568 !default;
$color-text-light:lighten($color-text, 20%) !default;
$color-text-dark:darken($color-text, 20%) !default;
$color-text-grey:$color-grey !default;
$color-link:$color-text-dark !default;
$color-link-hover:black !default;
$color-border:rgba(black,.12) !default;
$color-border-focus:rgba(#4299e1, 0.5) !default;
$color-blue-grey:#607d8b !default;
$color-blue-grey-light:lighten($color-blue-grey, 20%) !default;
$color-blue-grey-dark:darken($color-blue-grey, 20%) !default;
$gradient-linear-white-transparent-top:linear-gradient(to top, rgba(white,1) 50%, rgba(white,0) 100%) !default;
$opacity:1 !default;
//*---------- Brand ------------------------------*//
$facebook:#3b5998 !default;
$twitter:#1ea1f2 !default;
$googleplus:#db4437 !default;
$linkedin:#007bb4 !default;
$line:#00b900 !default;

@mixin bg-color($bg-color:$color-primary, $important:$boolean) {
  @if $important {
    background-color:$bg-color !important;
    color:text-color($bg-color) !important;
  } @else {
    background-color:$bg-color;
    color:text-color($bg-color);
  }
}
@mixin bg-opacity($color:white, $val:$opacity, $important:$boolean) {
  @if $important {
    background-color:rgba($color, $val) !important;
  } @else {
    background-color:rgba($color, $val);
  }
}
@mixin opacity($val:$opacity, $important:$boolean) {
  @if $important {
    opacity:$val !important;
  } @else {
    opacity:$val;
  }
}

@mixin button($pill:$boolean, $outline:$boolean, $three-d:$boolean, $groups:$boolean, $s:$boolean, $l:$boolean, $border-color:$color-primary, $bg:$color-primary, $important:$boolean) {
  display: inline-block;
  box-sizing: border-box;
  overflow: visible;
  @if $important {
    text-transform: none !important;
    @if $pill {
      border-radius: 9999px !important;
    }
    @if $outline {
      border-width: $space-1px !important;
      border-color: $border-color !important;
      background-color: transparent !important;
      color:darken($border-color, 20%) !important;
      &#{$active}, &:hover {background-color:$border-color !important; color:text-color($border-color) !important;}
    } @else {
      background-color:$bg !important;
      color:text-color($bg) !important;
      &#{$active}, &:hover {background-color:darken($bg, 10%); color:text-color(darken($bg, 10%)) !important;}
    }
    @if $three-d {
      border-bottom-width: calc(4rem/#{$strip-unit($font-base)}) !important;
      border-color: darken($border-color, 10%) !important;
    }
    &:disabled {
      opacity: .5 !important;
      cursor: not-allowed !important;
    }
  } @else {
    text-transform: none;
    @if $s {
      padding: $space-s $space;
    } @else if $l {
      padding: $space-m $space-l;
    } @else {
      padding: $space $space-m;
    }
    @if $pill {
      border-radius: 9999px;
    }
    @if $outline {
      border-width: $space-1px;
      border-color: $border-color;
      background-color: transparent;
      color:darken($border-color, 20%);
      &#{$active}, &:hover {background-color:$border-color; color:text-color($border-color);}
    } @else {
      background-color:$bg;
      color:text-color($bg);
      &#{$active}, &:hover {background-color:darken($bg, 10%); color:text-color(darken($bg, 10%));}
    }
    @if $three-d {
      border-bottom-width: calc(4rem/#{$strip-unit($font-base)});
      border-color: darken($border-color, 20%);
    }
  }
  &:disabled {
    opacity: .5;
    cursor: not-allowed;
  }
}

// @if $theme {
//   $color-primary:darken($color-primary, 60%) !default; //decreases the HSL lightness
//   $accent-color:lighten($accent-color, 60%) !default; //increases the HSL lightness
//   $color:rgba($color-primary, 60%) !default; //the 60% is alpha
//   $color:opacify($accent-color, .5) !default; //increases the alpha
//   $color:transparentize($accent-color, .5) !default; //decreases the alpha
// }

//### Display & Visibility ###------------------------------------------------//
@mixin display($property:block) {
  display:$property;
}

//### Border ###------------------------------------------------//
$radius-default:calc(4rem/#{strip-unit($font-base)}) !default; //=4px
$focus-ouline:0 !default;

@mixin border-opacity($color:white, $val:$opacity, $important:$boolean) {
  @if $important {
    border-color:rgba($color, $val) !important;
  } @else {
    border-color:rgba($color, $val);
  }
}
@mixin bordered($property:border, $width:$space-1px, $style:solid, $color:$color-border, $important:$boolean) {
  @if $important {
    #{$property}:$width $style $color !important;
  } @else {
    #{$property}:$width $style $color;
  }
}

@mixin square($size, $radius:0) {
  width:$size;
  height:$size;
  @if $radius != 0 {
    border-radius:$radius;
  }
}
@mixin avatar($size, $circle:$boolean) {
  width:$size;
  height:$size;
  @if $circle {
    border-radius:$size / 2;
  }
}

//### Position ###------------------------------------------------//
$z-index:0 !default;
@mixin position-index($position:relative, $z:$z-index) {
  position:$position;
  @if $z != 0 {
    z-index:$z;
  }
}

//### Space ###------------------------------------------------//
$space-1px:calc(1rem/#{strip-unit($font-base)}) !default; //=1px
$space-s:calc(2rem/#{strip-unit($font-base)}) !default; //=2px
$space:calc(5rem/#{strip-unit($font-base)}) !default; //=5px
$space-m:calc(10rem/#{strip-unit($font-base)}) !default; //=10px
$space-l:calc(15rem/#{strip-unit($font-base)}) !default; //=15px
$space-1px-negative:calc(-1rem/#{strip-unit($font-base)}) !default; //=1px
$space-s-negative:calc(-2rem/#{strip-unit($font-base)}) !default; //=2px
$space-negative:calc(-5rem/#{strip-unit($font-base)}) !default; //=5px
$space-m-negative:calc(-10rem/#{strip-unit($font-base)}) !default; //=10px
$space-l-negative:calc(-15rem/#{strip-unit($font-base)}) !default; //=15px
$space-1px-px:1px !default;
$space-s-px:2px !default;
$space-px:5px !default;
$space-m-px:10px !default;
$space-l-px:15px !default;

@mixin space($property:margin, $size:$space, $calc:$boolean) {
  @if $calc {
    #{$property}:calc(#{strip-unit($size)}rem/#{strip-unit($font-base)});
  } @else {
    #{$property}:$size;
  }
}
@mixin margin-padding($m:$space, $p:$space, $calc:$boolean) {
  @if $calc {
    margin:calc(#{strip-unit($m)}rem/#{strip-unit($font-base)});
    padding:calc(#{strip-unit($p)}rem/#{strip-unit($font-base)});
  } @else {
    margin:$m;
    padding:$p;
  }
}
@mixin reset-space {
  margin:0;
  padding:0;
}

//### List ###------------------------------------------------//
@mixin list-counter($reset:$boolean, $display:inherit, $name:dot-counter, $before:"", $after:". ") {
  @if $reset {
    list-style-type:none;
    counter-reset:$name;
  } @else {
    display:$display;
    counter-increment:$name;
    content:$before counter($name) $after;
  }
}

//### Indent ###------------------------------------------------//
@mixin flex-indent($align:start, $margin:calc(5rem/#{strip-unit($font-base)})) {
  display:flex;
  align-items:$align;
  &>* {
    margin:0;
    margin-right:$margin;
  }
  &>:last-child {margin-right:0;}
}

//### Width & Height & Scroll ###------------------------------------------------//
@mixin grid-width($min:2, $max:12, $important:$boolean, $media:""){
  @if $min <= 1 {@error "Property #{$min} must be greater than 1.";}
  $i:$min; 
  @while $i <= $max {
    $j:1;
    @while $j < $i {
      $selector:"";
      @if $important {$selector:#{$j}\/#{$i}\!#{$media};} @else {$selector:#{$j}\/#{$i}#{$media};}
      &#{$selector} {
        $k:2; $factor:$boolean;
        @while $k <= $j {
          @if $i%$k == 0 and $j%$k == 0 {$factor:true;}
          $k:$k + 1;
        }
        @if not $factor or $j == 1 {
          @if $important {
            width:calc(100%*#{$j}/#{$i}) !important;
          } @else {
            width:calc(100%*#{$j}/#{$i});
          }
        } 
      }
      $j:$j + 1;
    }
    $i:$i + 1;
  }
}
@mixin min-width($min:10px, $max:1000px, $step:10, $important:$boolean, $media:""){
  @if $min < 0 {@error "Property #{$min} must be greater than 0.";}
  $i:strip-unit($min);
  @while $i <= strip-unit($max) {
    $selector:"";
    @if $important {$selector:#{$i}\!#{$media};} @else {$selector:#{$i}#{$media};}
    &#{$selector} {
      @if $important {
        min-width:calc(#{$i}rem/#{strip-unit($font-base)}) !important;
      } @else {
        min-width:calc(#{$i}rem/#{strip-unit($font-base)});
      }
    }
    $i:$i + strip-unit($step);
  }
}
@mixin overflow-hidden($mask:$boolean) {
  overflow:hidden;
  position:relative;
  @if $mask {
    &:after {
      @include pseudo-content($display:block, $pos:absolute, $content:true, $background:true, $bg:$gradient-linear-white-transparent-top,$bg-txt:false, $l:0, $r:0, $b:0, $h:calc(60rem/#{strip-unit($font-base)}), $pointer-off:true);
      }
  }
}
@mixin ellipsis($lineHeight:$line-height, $lineCount:1, $bgColor:white, $truncate:$boolean){
  &#{$lineCount} {
    @include overflow-hidden;
    line-height:$lineHeight;
    max-height:$lineHeight * $lineCount;
    text-align:justify;
    @if not $truncate {
      margin-right:-1rem;
      padding-right:1rem;
    }
  }
  &#{$lineCount}:before {
    @if not $truncate {
      content:'...';
      position:absolute;
      right:0;
      bottom:0;
    }
  }
  &#{$lineCount}:after {
    content:'';
    position:absolute;
    right:0;
    @if $truncate {
      bottom:0;
      width:25%;
      background:linear-gradient(to right, rgba(255, 255, 255, 0), white 100%);
      pointer-events:none;
    } @else {
      width:1rem;
      height:1rem;
      margin-top:0.2rem;
      background:$bgColor;
    }
  }
}
@mixin cover {
  position:absolute; top:0; left:0; right:0; bottom:0; height:100%;
}

//### Aspect Ratio ###------------------------------------------------//
@mixin aspect-ratio {
  
}

//### Shadow ###------------------------------------------------//
@mixin box-shadow($base:true,$md:$boolean,$lg:$boolean,$xl:$boolean,$xxl:$boolean,$inner:$boolean,$outline:$boolean) {
  @if $base {box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);}
  @if $md {box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);}
  @if $lg {box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);}
  @if $xl {box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);}
  @if $xxl {box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);}
  @if $inner {box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.06);}
  @if $outline {box-shadow: 0 0 0 3px $color-border-focus;}
}
@mixin uk-box-shadow($s:true,$m:$boolean,$l:$boolean,$xl:$boolean) {
  @if $s {box-shadow: 0 2px 8px rgba(0,0,0,0.08);}
  @if $m {box-shadow: 0 5px 15px rgba(0,0,0,0.08);}
  @if $l {box-shadow: 0 14px 25px rgba(0,0,0,0.16);}
  @if $xl {box-shadow: 0 28px 50px rgba(0,0,0,0.16);}
}
@mixin mc-box-shadow($depth-1:true,$depth-2:$boolean,$depth-3:$boolean,$depth-4:$boolean,$depth-5:$boolean) {
  @if $depth-1 {
    -webkit-box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2);
    box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2);
  }
  @if $depth-2 {
    -webkit-box-shadow: 0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12), 0 2px 4px -1px rgba(0,0,0,0.3);
    box-shadow: 0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12), 0 2px 4px -1px rgba(0,0,0,0.3);
  }
  @if $depth-3 {
    -webkit-box-shadow: 0 8px 17px 2px rgba(0,0,0,0.14), 0 3px 14px 2px rgba(0,0,0,0.12), 0 5px 5px -3px rgba(0,0,0,0.2);
    box-shadow: 0 8px 17px 2px rgba(0,0,0,0.14), 0 3px 14px 2px rgba(0,0,0,0.12), 0 5px 5px -3px rgba(0,0,0,0.2);
  }
  @if $depth-4 {
    -webkit-box-shadow: 0 16px 24px 2px rgba(0,0,0,0.14), 0 6px 30px 5px rgba(0,0,0,0.12), 0 8px 10px -7px rgba(0,0,0,0.2);
    box-shadow: 0 16px 24px 2px rgba(0,0,0,0.14), 0 6px 30px 5px rgba(0,0,0,0.12), 0 8px 10px -7px rgba(0,0,0,0.2);
  }
  @if $depth-5 {
    -webkit-box-shadow: 0 24px 38px 3px rgba(0,0,0,0.14), 0 9px 46px 8px rgba(0,0,0,0.12), 0 11px 15px -7px rgba(0,0,0,0.2);
    box-shadow: 0 24px 38px 3px rgba(0,0,0,0.14), 0 9px 46px 8px rgba(0,0,0,0.12), 0 11px 15px -7px rgba(0,0,0,0.2);
  }
}

//### Pseudo ###------------------------------------------------//
@mixin pseudo-content($display:inherit, $pos:inherit, $content:$boolean, $content-val:"", $property:"", $property-val:$space, $fontsize:inherit, $icon:"", $font:$font-fa, $weight:900, $color:inherit, $background:$boolean, $bg:$color-grey-light, $bg-txt:true, $l:auto, $t:auto, $r:auto, $b:auto, $radius:0, $margin:inherit, $padding:inherit, $line:inherit, $h:auto, $pointer-off:$boolean) {
  // @if $min < 0 {@error "Property #{$min} must be greater than 0.";}
  @if $display != inherit {display:$display;}
  @if $pos != inherit {position:$pos;}
  @if $content {content:$content-val;}
  @if $fontsize != inherit {font-size:$fontsize;}
  @if $icon == fa {@include fa; font-family:$font; font-weight:$weight;}
  @if $icon == mi {@include mi}
  @if $color != inherit {color:$color;}
  @if $background {background:$bg; @if $bg-txt {color:text-color($bg);}}
  @if $l != auto {left:$l;}
  @if $t != auto {top:$t;}
  @if $r != auto {right:$r;}
  @if $b != auto {bottom:$b;}
  @if $radius != 0 {border-radius:$radius;}
  @if $margin != inherit {margin:$margin;}
  @if $padding != inherit {padding:$padding;}
  @if $line != inherit {line-height:$line;}
  @if $h != auto {height:$h;}
  @if $pointer-off {pointer-events:none;}
  @if $property != "" {#{$property}:$property-val;} //not working with "$property:$property-val"
}

//### nav ###------------------------------------------------//
$nav-height:auto !default;
$nav-line-height:$nav-height !default;
$nav-height-mobile:auto !default;
$nav-line-height-mobile:$nav-height-mobile !default;

//### Loop ###------------------------------------------------//
@mixin min-max($selector:p, $percent:1, $min:1, $max:50, $step:1, $property:$boolean, $property-name:font-size, $calc:$boolean, $unit:$boolean, $unit-val:rem, $denominator:$font-base, $bg:$boolean, $color-val:white, $opacity:$boolean, $border-opacity:$boolean, $border-color:white, $important:$boolean, $media:"") {
  #{$selector} {
    $i:strip-unit($min);
    @while $i <= strip-unit($max) {
      &#{$i*$percent}#{$media} {
        @if $important {
          @if $property and $calc {#{$property-name}:calc(#{$i}#{$unit-val}/#{strip-unit($denominator)})!important}
          @if $property and $unit {#{$property-name}:#{$i}$unit-val!important}
          @if $property and not $unit and not $calc {#{$property-name}:#{$i}!important}
          @if $bg {@include bg-opacity($color:$color-val, $val:$i, $important:true)}
          @if $opacity {@include opacity($val:$i, $important:true)}
          @if $border-opacity {@include border-opacity($color:$color-border, $val:$i, $important:true)}
        } @else {
          @if $property and $calc {#{$property-name}:calc(#{$i}#{$unit-val}/#{strip-unit($denominator)})}
          @if $property and $unit {#{$property-name}:#{$i}$unit-val}
          @if $property and not $unit and not $calc {#{$property-name}:#{$i}}
          @if $bg {@include bg-opacity($color:$color-val, $val:$i)}
          @if $opacity {@include opacity($val:$i)}
          @if $border-opacity {@include border-opacity($color:$color-border, $val:$i)}
        }
      }
      $i:$i + $step;
    }
  }
}

//
@mixin replace-text($image, $x:50%, $y:50%) {
  text-indent:-99999em;
  overflow:hidden;
  text-align:left;

  background: {
    image:$image;
    repeat:no-repeat;
    position:$x $y;
  }
}
// .mail-icon {
//   @include replace-text(url("../img/mail.svg"), 0);
// }

//List Repeat & Double margin
@mixin order($height, $selectors...) {
  @for $i from 0 to length($selectors) {
    #{nth($selectors, $i + 1)} {
      position:absolute;
      height:$height;
      margin-top:$i * $height;
    }
  }
}
// @include order(150px, "input.name", "input.address", "input.zip");

//###---------- Media ------------------------------###//
//###uk-@s###//
@media (min-width:640px) {
}

//###uk-@m###//
@media (min-width:960px) {
}

//###uk-@l###//
@media (min-width:1200px) {
}

//###uk-@xl###//
@media (min-width:1600px) {
}


//###bs-sm###//
@media (min-width:576px) {
}
//###bs-md###//
@media (min-width:768px) {
}
//###bs-lg###//
@media (min-width:992px) {
}
//###bs-xl###//
@media (min-width:1200px) {
}

//### Portrait ###//
@media screen and (orientation:portrait) {
}
//### Landscape ###//
@media screen and (orientation:landscape) {
}

//### ----------- IE10+ ----------- ###//
@media all and (-ms-high-contrast:none), (-ms-high-contrast:active) {
}

//### ----------- iPhone 4 and 4S ----------- ###//
//### Portrait and Landscape ###//
@media only screen
  and (min-device-width:320px)
  and (max-device-width:480px)
  and (-webkit-min-device-pixel-ratio:2) {
}

//### ----------- iPhone 5, 5S, 5C and 5SE ----------- ###//
//### Portrait and Landscape ###//
@media only screen
  and (min-device-width:320px)
  and (max-device-width:568px)
  and (-webkit-min-device-pixel-ratio:2) {
}

//### ----------- iPhone 6, 6S, 7 and 8 ----------- ###//
//### Portrait and Landscape ###//
@media only screen
  and (min-device-width:375px)
  and (max-device-width:667px)
  and (-webkit-min-device-pixel-ratio:2) {
}

//### ----------- iPhone 6+, 7+ and 8+ ----------- ###//
//### Portrait and Landscape ###//
@media only screen
  and (min-device-width:414px)
  and (max-device-width:736px)
  and (-webkit-min-device-pixel-ratio:3) {
}

//### ----------- iPhone X ----------- ###//
//### Portrait and Landscape ###//
@media only screen
  and (min-device-width:375px)
  and (max-device-width:812px)
  and (-webkit-min-device-pixel-ratio:3) {
}